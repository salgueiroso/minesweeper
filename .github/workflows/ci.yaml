name: "CI"

on:
  pull_request:
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
      - master        # triggers on pulls to main
  push:
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
      - master        # triggers on pushes that contain changes in main
env:
  DEFAULT_NODE_VERSION: 20.x
jobs:
  Definitions:
    runs-on: ubuntu-latest
    outputs:
      DEFAULT_NODE_VERSION: ${{ env.DEFAULT_NODE_VERSION }}
    steps:
      - run: echo ""
  Test:
    needs: Definitions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}" ]
        #, 21.x, 22.x, 23.x]
    steps:
      - uses: actions/checkout@v4.2.2
        name: Checkout
      - uses: actions/setup-node@v4.1.0
        name: Setup Node.js ${{ matrix.node-version }} 
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Run npm ci
        run: npm ci
      - name: Run tests
        run: npm test
  Build:
    needs: [Test, Definitions]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        name: Checkout
      - uses: actions/setup-node@v4.1.0
        name: Setup Node.js
        with:
          node-version: ${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}
          cache: 'npm'
      - name: Run npm ci
        run: npm ci
      - name: Run build
        run: npm run build
      # - name: Run npm publish
      #   run: npm publish
      - name: Run npm pack
        run: npm pack
      - name: Extract package
        run: tar -xvf *.tgz
      - name: Archive build
        uses: actions/upload-artifact@v4.5.0 
        with:
          name: package
          path: './package'

  Deploy:
    needs: [Build, Definitions]
    runs-on: ubuntu-latest
    environment: npmjs
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4.1.8
        with:
          name: package
      # - name: Extract package
      #   run: tar -xvf *.tgz
      - uses: actions/setup-node@v4.1.0
        name: Setup Node.js
        with:
          node-version: ${{ needs.Definitions.outputs.DEFAULT_NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
      - run: find .
      - name: Run npm publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}